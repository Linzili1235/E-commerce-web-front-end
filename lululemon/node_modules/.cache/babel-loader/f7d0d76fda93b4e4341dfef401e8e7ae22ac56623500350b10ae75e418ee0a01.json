{"ast":null,"code":"var _jsxFileName = \"/Users/phe/WebstormProjects/lululemon-latest-version/lulu-front/lululemon/src/components/mainPageComponents/SideBar/SideBarIcon.js\",\n  _s = $RefreshSig$();\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport { useSelector } from \"react-redux\";\nimport actions from \"../../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemCheckedIcon = _ref => {\n  let {\n    checked\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itemCheckedIcon\",\n    children: checked ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n};\n_c = ItemCheckedIcon;\nconst TitleCheckedIcon = _ref2 => {\n  let {\n    checked\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"titleCheckedIcon\",\n    children: checked ? /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 34\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n_c2 = TitleCheckedIcon;\nconst CheckedBoxIcon = _ref3 => {\n  _s();\n  let {\n    checked\n  } = _ref3;\n  const dispatch = useDispatch();\n  // console.log('[val]', val);\n  // const allFilters = useSelector(state => state?.productReducer?.filters)\n  // // allFilters = {}\n  //\n  // const entries = Object.entries(checked);\n  // //key: index, value: {name:..., isChecked:...}\n  // // console.log('entries', entries)\n  //\n  // // entry is value.name, which is the name of the filter\n  // const handlerCheckBoxChange = (entry) => {\n  //     // console.log('entry in handler', entry)\n  //     actions?.filterActions?.updateFilter(dispatch)(entry)\n  //         .then( rs => {\n  //             rs && actions?.productActions?.fetchAllProductsWithFilter(dispatch)(allFilters)\n  //         })\n  // }\n  let filters = useSelector(state => {\n    var _state$productReducer;\n    return state === null || state === void 0 ? void 0 : (_state$productReducer = state.productReducer) === null || _state$productReducer === void 0 ? void 0 : _state$productReducer.filters;\n  });\n  let isCheckedInside = false;\n  filters = Object.entries(filters);\n  filters.map(_ref4 => {\n    let [bigName, filterObject] = _ref4;\n    filterObject.map(item => {\n      const {\n        name,\n        isChecked\n      } = item;\n      if (name === checked) {\n        isCheckedInside = isChecked;\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkedBoxIcon\",\n    children: isCheckedInside ? /*#__PURE__*/_jsxDEV(CheckBoxIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 44\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n_s(CheckedBoxIcon, \"nr6+nhCz8+7B4nCgsUrjNssY/mU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c3 = CheckedBoxIcon;\nexport { ItemCheckedIcon, TitleCheckedIcon, CheckedBoxIcon };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ItemCheckedIcon\");\n$RefreshReg$(_c2, \"TitleCheckedIcon\");\n$RefreshReg$(_c3, \"CheckedBoxIcon\");","map":{"version":3,"names":["AddIcon","RemoveIcon","CheckBoxOutlineBlankIcon","CheckBoxIcon","useSelector","actions","useDispatch","ItemCheckedIcon","checked","TitleCheckedIcon","CheckedBoxIcon","dispatch","filters","state","productReducer","isCheckedInside","Object","entries","map","bigName","filterObject","item","name","isChecked"],"sources":["/Users/phe/WebstormProjects/lululemon-latest-version/lulu-front/lululemon/src/components/mainPageComponents/SideBar/SideBarIcon.js"],"sourcesContent":["import AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport {useSelector} from \"react-redux\";\nimport actions from \"../../../actions\";\nimport {useDispatch} from \"react-redux\";\n\nconst ItemCheckedIcon = ({checked}) => {\n    return <div className=\"itemCheckedIcon\" >\n        {checked ? <RemoveIcon/>: <AddIcon/>}\n    </div>\n}\n\nconst TitleCheckedIcon = ({checked}) => {\n    return <div className=\"titleCheckedIcon\">\n        {checked ? <RemoveIcon/>:<AddIcon/>}\n    </div>\n}\n\n\nconst CheckedBoxIcon = ({checked}) => {\n    const dispatch = useDispatch()\n    // console.log('[val]', val);\n    // const allFilters = useSelector(state => state?.productReducer?.filters)\n    // // allFilters = {}\n    //\n    // const entries = Object.entries(checked);\n    // //key: index, value: {name:..., isChecked:...}\n    // // console.log('entries', entries)\n    //\n    // // entry is value.name, which is the name of the filter\n    // const handlerCheckBoxChange = (entry) => {\n    //     // console.log('entry in handler', entry)\n    //     actions?.filterActions?.updateFilter(dispatch)(entry)\n    //         .then( rs => {\n    //             rs && actions?.productActions?.fetchAllProductsWithFilter(dispatch)(allFilters)\n    //         })\n    // }\n    let filters = useSelector(state => state?.productReducer?.filters)\n    let isCheckedInside = false\n    filters = Object.entries(filters)\n    filters.map(([bigName,filterObject]) => {\n        filterObject.map(item => {\n            const {name,isChecked} = item\n            if (name === checked) {\n                isCheckedInside = isChecked\n            }\n        })\n\n    })\n\n    return <div className=\"checkedBoxIcon\" >\n        {isCheckedInside ? <CheckBoxIcon/>:<CheckBoxOutlineBlankIcon/>}\n    </div>\n}\n\nexport {ItemCheckedIcon,TitleCheckedIcon,CheckedBoxIcon}"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,wBAAwB,MAAM,0CAA0C;AAC/E,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAAQC,WAAW,QAAO,aAAa;AACvC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAAQC,WAAW,QAAO,aAAa;AAAC;AAExC,MAAMC,eAAe,GAAG,QAAe;EAAA,IAAd;IAACC;EAAO,CAAC;EAC9B,oBAAO;IAAK,SAAS,EAAC,iBAAiB;IAAA,UAClCA,OAAO,gBAAG,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAE,gBAAE,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QAClC;AACV,CAAC;AAAA,KAJKD,eAAe;AAMrB,MAAME,gBAAgB,GAAG,SAAe;EAAA,IAAd;IAACD;EAAO,CAAC;EAC/B,oBAAO;IAAK,SAAS,EAAC,kBAAkB;IAAA,UACnCA,OAAO,gBAAG,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAE,gBAAC,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QACjC;AACV,CAAC;AAAA,MAJKC,gBAAgB;AAOtB,MAAMC,cAAc,GAAG,SAAe;EAAA;EAAA,IAAd;IAACF;EAAO,CAAC;EAC7B,MAAMG,QAAQ,GAAGL,WAAW,EAAE;EAC9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIM,OAAO,GAAGR,WAAW,CAACS,KAAK;IAAA;IAAA,OAAIA,KAAK,aAALA,KAAK,gDAALA,KAAK,CAAEC,cAAc,0DAArB,sBAAuBF,OAAO;EAAA,EAAC;EAClE,IAAIG,eAAe,GAAG,KAAK;EAC3BH,OAAO,GAAGI,MAAM,CAACC,OAAO,CAACL,OAAO,CAAC;EACjCA,OAAO,CAACM,GAAG,CAAC,SAA4B;IAAA,IAA3B,CAACC,OAAO,EAACC,YAAY,CAAC;IAC/BA,YAAY,CAACF,GAAG,CAACG,IAAI,IAAI;MACrB,MAAM;QAACC,IAAI;QAACC;MAAS,CAAC,GAAGF,IAAI;MAC7B,IAAIC,IAAI,KAAKd,OAAO,EAAE;QAClBO,eAAe,GAAGQ,SAAS;MAC/B;IACJ,CAAC,CAAC;EAEN,CAAC,CAAC;EAEF,oBAAO;IAAK,SAAS,EAAC,gBAAgB;IAAA,UACjCR,eAAe,gBAAG,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAE,gBAAC,QAAC,wBAAwB;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QAC5D;AACV,CAAC;AAAA,GAlCKL,cAAc;EAAA,QACCJ,WAAW,EAiBdF,WAAW;AAAA;AAAA,MAlBvBM,cAAc;AAoCpB,SAAQH,eAAe,EAACE,gBAAgB,EAACC,cAAc;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}